{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","initialState","filter","query","newFilter","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","currentTodos","useMemo","filteredTodos","completed","queryReformat","trim","toLowerCase","title","includes","className","map","id","onClick","TodoFilter","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","currentUser","setCurrentUser","isLoading","setIsLoading","loadCurrentUser","a","userId","user","Error","useEffect","href","email","name","App","loadTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9482df7c.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype FilterChangeAction = {\n  type: 'filter/SET_FILTER',\n  payload: Status,\n};\n\ntype QueryAction = {\n  type: 'filter/SET_QUERY',\n  payload: string,\n};\n\ntype Action = FilterChangeAction | QueryAction;\n\nconst setFilter = (newFilter: Status): FilterChangeAction => ({\n  type: 'filter/SET_FILTER',\n  payload: newFilter,\n});\n\nconst setQuery = (query: string): QueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst initialState = {\n  filter: 'all',\n  query: '',\n};\n\nexport const actions = { setFilter, setQuery };\n\nconst filterReducer = (\n  state = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/SET_FILTER':\n      return {\n        ...state,\n        filter: action.payload,\n      };\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype TodosSetAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\nconst setTodos = (todos: Todo[]): TodosSetAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: TodosSetAction,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const { filter, query } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const currentTodos = useMemo(() => {\n    let filteredTodos = todos;\n\n    // Step 1: Filter by status\n    switch (filter) {\n      case 'active':\n        filteredTodos = filteredTodos.filter((todo) => (\n          !todo.completed\n        ));\n        break;\n      case 'completed':\n        filteredTodos = filteredTodos.filter((todo) => (\n          todo.completed\n        ));\n        break;\n      default:\n        break;\n    }\n\n    // Step 2: Filter by query\n    const queryReformat = query.trim().toLowerCase();\n\n    if (queryReformat) {\n      filteredTodos = filteredTodos.filter((todo) => (\n        todo.title.toLowerCase().includes(queryReformat)\n      ));\n    }\n\n    return filteredTodos;\n  }, [todos, filter, query]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {currentTodos.map((todo) => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr key={id} data-cy=\"todo\">\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={`has-text-${completed ? 'success' : 'danger'}`}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => dispatch(actions.setTodo(todo))}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={`far fa-eye${currentTodo?.id === id ? '-slash' : ''}`}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const { filter, query } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={\n              (event) => dispatch(actions.setFilter(\n                event.target.value as Status,\n              ))\n            }\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => (dispatch(actions.setQuery(event.target.value)))}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actions.setQuery(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const loadCurrentUser = async () => {\n    if (currentTodo) {\n      try {\n        setIsLoading(true);\n        const user = await getUser(currentTodo.userId);\n\n        setCurrentUser(user);\n      } catch {\n        throw new Error('An error has occured while loading user');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    loadCurrentUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (<Loader />)}\n      {(currentUser && currentTodo) && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={`has-text-${currentTodo.completed ? 'success' : 'danger'}`}\n              >\n                {currentTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const loadTodos = async () => {\n    try {\n      setIsLoading(true);\n      const currentTodos = await getTodos();\n\n      dispatch(actions.setTodos(currentTodos));\n    } catch {\n      throw new Error('An error has occured while loading Todos');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (<Loader />)}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}